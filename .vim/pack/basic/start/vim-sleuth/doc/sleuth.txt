*sleuth.txt*  Heuristically set buffer options

Author:  Tim Pope <http://tpo.pe/>
Repo:    https://github.com/tpope/vim-sleuth
License: Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.

SUMMARY                                         *sleuth*

Automatic detection happens on the |BufNewFile|, |BufReadPost|, and
|BufFilePost| events.  Sleuth first consults modelines, then EditorConfig
(https://editorconfig.org) files.  If neither of these produces a value for
'expandtab' and 'shiftwidth', a heuristic algorithm is used to guess them.

The full list of detected options is as follows:

Vim Option     Safe?  EditorConfig key ~
'expandtab'        Y  indent_style
'shiftwidth'       Y  indent_size
'tabstop'          Y  tab_width
'textwidth'        Y  max_line_length
'endofline'           insert_final_newline
'fileformat'          end_of_line
'fileencoding'        charset
'bomb'                charset

Options marked "safe" are those guaranteed not to toggle 'modified'.  These
are the only options that will be set in 'nomodifiable' buffers, and the only
options that Sleuth will detect in a modeline.  Safe options will also be
reapplied on every |FileType| event, so that they can override any |ftplugin|
settings.

Sleuth globally sets 'smarttab' (to avoid the need to set 'softtabstop') and
'nofixendofline' (so that 'endofline' can take effect).

INTERFACE                                       *sleuth-interface*

                                                *:Sleuth*
:Sleuth                 Manually detect indentation.

:verbose Sleuth         Manually detect indentation, and display what options
                        were set and why.

                                                *SleuthIndicator()*
SleuthIndicator()       Indicator for inclusion in 'statusline'.  Or use
                        flagship.vim to have it included automatically.

CONFIGURATION                                   *sleuth-configuration*

To override detection and force options for a particular buffer, use a
|modeline| or EditorConfig (https://editorconfig.org/).

                                                *g:sleuth_automatic*
Automatic detection of buffer options can be disabled entirely with:
>
        let g:sleuth_automatic = 0
<
or:
>
        let b:sleuth_automatic = 0
<
                                                *g:sleuth_no_filetype_indent_on*
Sleuth forces |:filetype-indent-on| by default, which enables file-type
specific indenting algorithms and is highly recommended. To opt out:
>
        let g:sleuth_no_filetype_indent_on = 1
<
 vim:tw=78:et:ft=help:norl:
