name: Bug Report
description: Report a bug
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this bug report. It's important to complete it in full, as this maximises the likelihood that it can be reproduced and ultimately fixed.

        Please note, if your issue is NOT a bug report, then this is not the form to use. If your issue ammounts to a feature request, or a request for help, then it may be closed without comment.

        Please make sure you have read [CONTRIBUTING.md](https://github.com/puremourning/vimspector/blob/master/CONTRIBUTING.md#diagnostics) before raising an issue. If it becomes clear that you have not, the issue will be closed.

  - type: textarea
    id: issue-description
    attributes:
      label: Description
      description: Provide A clear and concise description of what the bug is.
      placeholder: |
        When attempting to add a breakpoint in a go file, if the linu number is greater than 120, an error is thown and the breakpoint is not added.
    validations:
      required: true

  - type: dropdown
    id: issue-works-in-vim
    attributes:
      label: Works in vim?
      description: If you are using Neovim, does the issue reproduce in Vim?
      options:
        - Reproducable in Vim
        - Only broken in Neovim
    validations:
      required: true

  - type: dropdown
    id: issue-works-clean
    attributes:
      label: Works with clean config?
      description: |
        Does your issue reproduce with `vim --clean -Nu /path/to/vimspector/support/minimal_vimrc`?
      options:
        - 'Yes'
        - 'No'
    validations:
      required: true

  - type: dropdown
    id: issue-works-in-sample-project
    attributes:
      label: Sample project works?
      description: Try one of the sample projects in `support/test` for your file type. Does that work? If not, use the sample project for crating your reproduction case.
      options:
        - Not reproducable with sample project
        - Reproducable with sample project
        - No sample project for this filetype
    validations:
      required: true

  - type: textarea
    id: issue-repro
    attributes:
      label: Minimal Reproduction
      description: |
        Provide a clear set of steps to reproduce the issue using the minimal vimrc, i.e. "What you did"

        NOTE: If your steps to reproduce are incomplete or invalid, the issue may be closed without response.

        NOTE: If your issue is intermittent, or hard to reproduce with minimal or sample projects, explain _in detail_ the pattern of behaviour and what investigation you have done so far. Note that in this case it is _probably_ better to get in contact on Gitter/Matrix as it's _almost impossible_ to diagnose such issues via GttHub without a lot of back and forth.
      value: |
        List of steps to reproduce:

        1. Run `vim ---clean Nu /path/to/vimspector/support/minimal_vimrc ....`
        2. Open _this project_...
        3. Press _this sequence of keys_

    validations:
      required: true

  - type: textarea
    id: issue-expected
    attributes:
      label: Expected Behaviour
      description: |
        Provide a clear and concise description of what you expected to happen.
      placeholder: |
        e.g. Expected a breakpoint to be added on line 27, with a sign in the sign
        column...
    validations:
      required: true

  - type: textarea
    id: issue-actual
    attributes:
      label: Actual Behaviour
      description: |
        What actually happened when you performed the above steps?
      placeholder: |
        e.g. No breakpoint is added. A vim error trace is produced with the following output...
    validations:
      required: true

  - type: textarea
    id: issue-additional
    attributes:
      label: Additional information
      description: |
        Any additional notes you want to add to help the investigation

  - type: markdown
    attributes:
      value: |
        # Environment and log files

        Please take the time to gather _all_ of the following outputs. I know it's a bit tedious and might not seem relevant, but it really is the fastest way to get an answer, as these diagnostics allow the maintainer to rule out many possible causes and often to solve the issue without any back-and-forth.

        ***NOTE***: NeoVim is supported only on a best-effort basis. Please check the README for limitations of neovim. Don't be offended if I ask you to reproduce issues in Vim.

        ***NOTE***: Windows support is experimental and best-efrort only. If you find an issue related to Windows or windows-isms, consider sending a PR or discussing on Gitter rather than raising an issue.


  - type: dropdown
    id: issue-instalation-type
    attributes:
      label: Installation Type
      description: How did you install vimspector?
      options:
        - Plugin Manager (git clone)
        - Vim packages (git clone)
        - Release tarball
        - Other (specify in notes)
    validations:
      required: true

  - type: input
    id: issue-version
    attributes:
      label: Vimspector version
      description: |
        Provide the output of `git rev-parse HEAD` if using a plugin manager, or the name of the tarball if using a tarball installation.
    validations:
      required: true

  - type: textarea
    id: issue-debuginfo
    attributes:
      label: Debug Info
      description: Provide the output of `:VimspectorDebugInfo`
      render: Text

  - type: textarea
    id: issue-logfile
    attributes:
      label: Log file
      description: |
        Provide the contents of `~/.vimspector.log` (`:VimspectorToggleLog`)
      render: Text

  - type: textarea
    id: issue-vim-version
    attributes:
      label: Vim version
      description: Provide the output of `vim --version` and/or `nvim --version`
      render: Text
    validations:
      required: true

  - type: input
    id: issue-python-test
    attributes:
      label: Python version
      description: |
        If vimspector isn't working at all, please provide the following python diagnostics.
      placeholder: |
        Provide the output of:
           * `:py3 print( __import__( 'sys').version )`
           * `:py3 import vim`
           * `:py3 import vimspector`

  - type: textarea
    id: issue-neovim-checkhealth
    attributes:
      label: Neovim diagnostics
      description: If using Neovim, provide the output of `:checkhealth`
      render: Text
      placeholder: |
        Output of `:checkhealth`

  - type: input
    id: issue-os
    attributes:
      label: Operating System
      description: |
        Provide your OS, version and relevant distribution details, such as `uname -a` output

  - type: checkboxes
    attributes:
      label: Declaration
      description: |
        Please tick the following boxes to confirm you have performed the actions
      options:
        - label: I have read and understood [CONTRIBUTING.md](https://github.com/puremourning/vimspector/blob/master/CONTRIBUTING.md#diagnostics)
          required: true
        - label: I have read and understood the [CODE_OF_CONDUCT.md](https://github.com/puremourning/vimspector/blob/master/CODE_OF_CONDUCT.md)
          required: true
